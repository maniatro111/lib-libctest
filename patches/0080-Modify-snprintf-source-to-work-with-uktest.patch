From 5aa177d235522053306b7adfe172f5fca14304c4 Mon Sep 17 00:00:00 2001
From: Florin Postolache <florin.postolache80@gmail.com>
Date: Mon, 24 Oct 2022 22:53:40 +0300
Subject: [PATCH] Modify snprintf source to work with uktest

Signed-off-by: Florin Postolache <florin.postolache80@gmail.com>
---
 src/functional/snprintf.c | 29 ++++++++---------------------
 1 file changed, 8 insertions(+), 21 deletions(-)

diff --git a/src/functional/snprintf.c b/src/functional/snprintf.c
index 70c1118..0697613 100644
--- a/src/functional/snprintf.c
+++ b/src/functional/snprintf.c
@@ -6,17 +6,13 @@
 #include <errno.h>
 #include <limits.h>
 #include <math.h>
-#include "test.h"
+#include <uk/test.h>
 
 #define DISABLE_SLOW_TESTS
 
-#define TEST(r, f, x, m) ( \
-	((r) = (f)) == (x) || \
-	(t_error("%s failed (" m ")\n", #f, r, x), 0) )
+#define TEST(r, f, x, m) UK_TEST_ASSERT((((r) = (f)) == (x)))
 
-#define TEST_S(s, x, m) ( \
-	!strcmp((s),(x)) || \
-	(t_error("[%s] != [%s] (%s)\n", s, x, m), 0) )
+#define TEST_S(s, x, m) UK_TEST_EXPECT_ZERO((strcmp((s),(x))))
 
 static const struct {
 	const char *fmt;
@@ -140,7 +136,7 @@ static const struct {
 	{ NULL, 0.0, NULL }
 };
 
-int main(void)
+UK_TESTCASE(uk_libc_string_tests, snprintf_tests)
 {
 	int i, j, k;
 	char b[2000];
@@ -176,24 +172,15 @@ int main(void)
 #endif
 	for (j=0; int_tests[j].fmt; j++) {
 		i = snprintf(b, sizeof b, int_tests[j].fmt, int_tests[j].i);
-		if (i != strlen(int_tests[j].expect)) {
-			t_error("snprintf(b, sizeof b, \"%s\", %d) returned %d wanted %d\n",
-				int_tests[j].fmt, int_tests[j].i, i, strlen(int_tests[j].expect));
-		}
-		if (strcmp(b, int_tests[j].expect) != 0)
-			t_error("bad integer conversion: got \"%s\", want \"%s\"\n", b, int_tests[j].expect);
+		UK_TEST_ASSERT(((i == strlen(int_tests[j].expect))));
+		UK_TEST_EXPECT_ZERO((strcmp(b, int_tests[j].expect)));
 	}
 
 	for (j=0; fp_tests[j].fmt; j++) {
 		i = snprintf(b, sizeof b, fp_tests[j].fmt, fp_tests[j].f);
-		if (i != strlen(fp_tests[j].expect)) {
-			t_error("snprintf(b, sizeof b, \"%s\", %f) returned %d wanted %d\n",
-				fp_tests[j].fmt, fp_tests[j].f, i, strlen(fp_tests[j].expect));
-		}
-		if (strcmp(b, fp_tests[j].expect) != 0)
-			t_error("bad floating-point conversion: got \"%s\", want \"%s\"\n", b, fp_tests[j].expect);
+		UK_TEST_ASSERT((i == strlen(fp_tests[j].expect)));
+		UK_TEST_EXPECT_ZERO(strcmp(b, fp_tests[j].expect));
 	}
 
 	TEST(i, snprintf(0, 0, "%.4a", 1.0), 11, "%d != %d");
-	return t_status;
 }
-- 
2.25.1

