From 09ab883f5e68e7e38ae96ce6a7a37e1eefbe8b30 Mon Sep 17 00:00:00 2001
From: Florin Postolache <florin.postolache80@gmail.com>
Date: Thu, 10 Nov 2022 10:19:30 +0200
Subject: [PATCH] Modify strtol source to work with uktest

Signed-off-by: Florin Postolache <florin.postolache80@gmail.com>
---
 src/functional/strtol.c | 21 +++++++--------------
 1 file changed, 7 insertions(+), 14 deletions(-)

diff --git a/src/functional/strtol.c b/src/functional/strtol.c
index d09a31c..1245761 100644
--- a/src/functional/strtol.c
+++ b/src/functional/strtol.c
@@ -2,7 +2,7 @@
 #include <stdlib.h>
 #include <string.h>
 #include <errno.h>
-#include "test.h"
+#include <uk/test.h>
 
 /* r = place to store result
  * f = function call to test (or any expression)
@@ -10,15 +10,13 @@
  * m = message to print on failure (with formats for r & x)
 **/
 
-#define TEST(r, f, x, m) ( \
-	errno = 0, msg = #f, ((r) = (f)) == (x) || \
-	(t_error("%s failed (" m ")\n", #f, r, x), 0) )
+#define TEST(r, f, x, m) ({ \
+	errno = 0; UK_TEST_ASSERT(((f) == (x))); \
+	})
 
-#define TEST2(r, f, x, m) ( \
-	((r) = (f)) == (x) || \
-	(t_error("%s failed (" m ")\n", msg, r, x), 0) )
+#define TEST2(r, f, x, m) UK_TEST_ASSERT(((f) == (x)))
 
-int main(void)
+UK_TESTCASE(uk_libc_conversion_tests, strtol_tests)
 {
 	int i;
 	long l;
@@ -82,8 +80,6 @@ int main(void)
 		TEST(ul, strtoul(s="-18446744073709551616", &c, 0), 18446744073709551615UL, "uncaught negative overflow %lu != %lu");
 		TEST2(i, c-s, 21, "wrong final position %d != %d");
 		TEST2(i, errno, ERANGE, "spurious errno %d != %d");
-	} else {
-		t_error("sizeof(long) == %d, not implemented\n", (int)sizeof(long));
 	}
 
 	if (sizeof(long long) == 8) {
@@ -111,9 +107,7 @@ int main(void)
 		TEST(ull, strtoull(s="-18446744073709551616", &c, 0), 18446744073709551615ULL, "uncaught negative overflow %llu != %llu");
 		TEST2(i, c-s, 21, "wrong final position %d != %d");
 		TEST2(i, errno, ERANGE, "spurious errno %d != %d");
-	} else {
-		t_error("sizeof(long long) == %d, not implemented\n", (int)sizeof(long long));
-	}
+	} 
 
 	TEST(l, strtol("z", 0, 36), 35, "%ld != %ld");
 	TEST(l, strtol("00010010001101000101011001111000", 0, 2), 0x12345678, "%ld != %ld");
@@ -135,5 +129,4 @@ int main(void)
 
 	TEST(l, strtol(s="  1", &c, 0), 1, "%ld != %ld");
 	TEST2(i, c-s, 3, "wrong final position %d != %d");
-	return t_status;
 }
-- 
2.25.1

