From 73bbe44960bdb261a439edc9132f6b4384e68ff9 Mon Sep 17 00:00:00 2001
From: Florin Postolache <florin.postolache80@gmail.com>
Date: Sun, 7 Aug 2022 20:23:22 +0300
Subject: [PATCH] Modify pthread_cancel-points source to work with uktest

Signed-off-by: Florin Postolache <florin.postolache80@gmail.com>
---
 src/functional/pthread_cancel-points.c | 22 +++++++++++-----------
 1 file changed, 11 insertions(+), 11 deletions(-)

diff --git a/src/functional/pthread_cancel-points.c b/src/functional/pthread_cancel-points.c
index 8b169a0..c6a8f29 100644
--- a/src/functional/pthread_cancel-points.c
+++ b/src/functional/pthread_cancel-points.c
@@ -6,12 +6,12 @@
 #include <sys/mman.h>
 #include <fcntl.h>
 #include <unistd.h>
-#include "test.h"
+#include <uk/test.h>//#include "test.h"
 
-#define TESTC(c, m) ( (c) || (t_error(#c " failed (%s, " m ")\n", cdescr), 0) )
-#define TESTR(f, m) do {int r; \
-	if ((r = (f))) t_error(#f " failed: %s (%s, " m ")\n", strerror(r), cdescr); } while (0)
-#define TESTE(f, m) do { \
+#define TESTC(c, m) UK_TEST_ASSERT((c))//( (c) || (t_error(#c " failed (%s, " m ")\n", cdescr), 0) )
+#define TESTR(f, m) UK_TEST_ASSERT((f))//do {int r; \
+//	if ((r = (f))) t_error(#f " failed: %s (%s, " m ")\n", strerror(r), cdescr); } while (0)
+#define TESTE(f, m) UK_TEST_EXPECT_SNUM_EQ((f), -1)//do { \
 	if ((f)==-1) t_error(#f " failed: %s (%s, " m ")\n", strerror(errno), cdescr); } while (0)
 
 static sem_t sem_seq, sem_test;
@@ -122,7 +122,7 @@ static void *run_execute(void *arg)
 	return 0;
 }
 
-int main(void)
+UK_TESTCASE(uk_libc_testsuite, pthread_cancel_points_test)//int main(void)
 {
 	TESTR(sem_init(&sem_seq, 0, 0), "creating semaphore");
 
@@ -138,14 +138,14 @@ int main(void)
 		TESTR(sem_post(&sem_seq), "unblocking canceled thread");
 		TESTR(pthread_join(td, &res), "joining canceled thread");
 		if (cur_sc->want_cancel) {
-			TESTC(res == PTHREAD_CANCELED, "canceled thread exit status")
-			&& TESTC(seqno == 1, "seqno");
+			TESTC(res == PTHREAD_CANCELED, "canceled thread exit status");
+			/*&&*/ TESTC(seqno == 1, "seqno");
 		} else {
-			TESTC(res != PTHREAD_CANCELED, "canceled thread exit status")
-			&& TESTC(seqno == 2, "seqno");
+			TESTC(res != PTHREAD_CANCELED, "canceled thread exit status");
+			/*&&*/ TESTC(seqno == 2, "seqno");
 		}
 		cur_sc->cleanup(cur_sc->arg);
 	}
 
-	return t_status;
+//	return t_status;
 }
-- 
2.25.1

