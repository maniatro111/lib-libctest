From 63f7ba8a2e1f7257bf82a0a040e610f7bf507527 Mon Sep 17 00:00:00 2001
From: Florin Postolache <florin.postolache80@gmail.com>
Date: Thu, 10 Nov 2022 22:45:39 +0200
Subject: [PATCH] Modify strftime source to work with uktest

Signed-off-by: Florin Postolache <florin.postolache80@gmail.com>
---
 src/functional/strftime.c | 23 +++++++++--------------
 1 file changed, 9 insertions(+), 14 deletions(-)

diff --git a/src/functional/strftime.c b/src/functional/strftime.c
index 25e1172..9109c01 100644
--- a/src/functional/strftime.c
+++ b/src/functional/strftime.c
@@ -2,20 +2,16 @@
 #include <stdlib.h>
 #include <string.h>
 #include <time.h>
-#include "test.h"
+#include <uk/test.h>
 
 static char buffer[100];
 
-static void checkStrftime(const char* format, const struct tm* tm,
-		const char* expected) {
-	size_t resultLength = strftime(buffer, sizeof(buffer), format, tm);
-
-	if (resultLength != 0 && strcmp(buffer, expected) != 0) {
-		t_error("\"%s\": expected \"%s\", got \"%s\"\n", format, expected, buffer);
-	} else if (resultLength == 0 && strlen(expected) != 0) {
-		t_error("\"%s\": expected \"%s\", got nothing\n", format, expected);
-	}
-}
+#define checkStrftime(format, tm, expected) \
+	({ \
+	size_t resultLength = strftime(buffer, sizeof(buffer), format, tm); \
+	UK_TEST_ASSERTF(!(resultLength != 0 && strcmp(buffer, expected) != 0), "The buffer %s the same as expected.", strcmp(buffer, expected) ? "isn't": "is" ); \
+	UK_TEST_ASSERTF(!(resultLength == 0 && strlen(expected) != 0), "strftime(%s, %d, %s, tm) returned %d", buffer, sizeof(buffer), format, resultLength); \
+	})
 
 static struct tm tm1 = {
 	.tm_sec = 45,
@@ -77,7 +73,8 @@ static struct tm tm5 = {
 	.tm_isdst = 0
 };
 
-int main() {
+UK_TESTCASE(uk_libc_time_tests, strftime_tests)
+ {
 	setenv("TZ", "UTC0", 1);
 
 	checkStrftime("%c", &tm1, "Sun Jan  3 13:23:45 2016");
@@ -176,6 +173,4 @@ int main() {
 			checkStrftime("%s", &tm5, "67768036160140800");
 		}
 	}
-
-	return t_status;
 }
-- 
2.25.1

