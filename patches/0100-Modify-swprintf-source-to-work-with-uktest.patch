From ed7a9728823d5502f442aa40e7c205677506a770 Mon Sep 17 00:00:00 2001
From: Florin Postolache <florin.postolache80@gmail.com>
Date: Tue, 25 Oct 2022 11:42:29 +0300
Subject: [PATCH] Modify swprintf source to work with uktest

Signed-off-by: Florin Postolache <florin.postolache80@gmail.com>
---
 src/functional/swprintf.c | 29 ++++++++---------------------
 1 file changed, 8 insertions(+), 21 deletions(-)

diff --git a/src/functional/swprintf.c b/src/functional/swprintf.c
index 243fae8..f01702e 100644
--- a/src/functional/swprintf.c
+++ b/src/functional/swprintf.c
@@ -9,15 +9,11 @@
 #include <wchar.h>
 #include <locale.h>
 #include <langinfo.h>
-#include "test.h"
+#include <uk/test.h>
 
-#define TEST(r, f, x, m) ( \
-	((r) = (f)) == (x) || \
-	(t_error("%s failed (" m ")\n", #f, r, x), 0) )
+#define TEST(r, f, x, m) UK_TEST_ASSERT((((r) = (f)) == (x)))
 
-#define TEST_S(s, x, m) ( \
-	!wcscmp((s),(x)) || \
-	(t_error("[%ls] != [%ls] (%s)\n", s, x, m), 0) )
+#define TEST_S(s, x, m) UK_TEST_EXPECT_ZERO(wcscmp((s),(x)))
 
 static const struct {
 	const wchar_t *fmt;
@@ -96,7 +92,7 @@ static const struct {
 	{ NULL, 0.0, NULL }
 };
 
-int main(void)
+UK_TESTCASE(uk_libc_file_folder_tests, swprintf_tests)
 {
 	int i, j;
 	wchar_t b[500];
@@ -130,22 +126,13 @@ int main(void)
 
 	for (j=0; int_tests[j].fmt; j++) {
 		i = swprintf(b, sizeof b, int_tests[j].fmt, int_tests[j].i);
-		if (i != wcslen(int_tests[j].expect)) {
-			t_error("swprintf(b, sizeof b, \"%ls\", %d) returned %d wanted %d\n",
-				int_tests[j].fmt, int_tests[j].i, i, wcslen(int_tests[j].expect));
-		}
-		if (wcscmp(b, int_tests[j].expect) != 0)
-			t_error("bad integer conversion: got \"%ls\", want \"%ls\"\n", b, int_tests[j].expect);
+		UK_TEST_ASSERT(i == wcslen(int_tests[j].expect));
+		UK_TEST_EXPECT_ZERO(wcscmp(b, int_tests[j].expect));
 	}
 
 	for (j=0; fp_tests[j].fmt; j++) {
 		i = swprintf(b, sizeof b, fp_tests[j].fmt, fp_tests[j].f);
-		if (i != wcslen(fp_tests[j].expect)) {
-			t_error("swprintf(b, sizeof b, \"%ls\", %f) returned %d wanted %d\n",
-				fp_tests[j].fmt, fp_tests[j].f, i, wcslen(fp_tests[j].expect));
-		}
-		if (wcscmp(b, fp_tests[j].expect) != 0)
-			t_error("bad floating-point conversion: got \"%ls\", want \"%ls\"\n", b, fp_tests[j].expect);
+		UK_TEST_ASSERT(i == wcslen(fp_tests[j].expect));
+		UK_TEST_EXPECT_ZERO(wcscmp(b, fp_tests[j].expect));
 	}
-	return t_status;
 }
-- 
2.25.1

