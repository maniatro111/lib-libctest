From e61a9a57a03913fddb52ba8cd15d2aa2b141df96 Mon Sep 17 00:00:00 2001
From: Florin Postolache <florin.postolache80@gmail.com>
Date: Fri, 28 Oct 2022 12:22:35 +0300
Subject: [PATCH] Modify pthread_rwlock-ebusy source to work with uktest

Signed-off-by: Florin Postolache <florin.postolache80@gmail.com>
---
 src/regression/pthread_rwlock-ebusy.c | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/src/regression/pthread_rwlock-ebusy.c b/src/regression/pthread_rwlock-ebusy.c
index 9f157a8..2180218 100644
--- a/src/regression/pthread_rwlock-ebusy.c
+++ b/src/regression/pthread_rwlock-ebusy.c
@@ -3,15 +3,15 @@
 #include <pthread.h>
 #include <errno.h>
 #include <string.h>
-#include "test.h"
+#include <uk/test.h>
 
-#define T(f) if ((r=(f))) t_error(#f " failed: %s\n", strerror(r))
+#define T(f) UK_TEST_EXPECT_ZERO((r=(f)))
 
 static void *tryrdlock(void *arg)
 {
 	int r = pthread_rwlock_tryrdlock(arg);
 	if (r != EBUSY)
-		t_error("tryrdlock for wrlocked lock returned %s, want EBUSY\n", strerror(r));
+		return -1;
 	return 0;
 }
 
@@ -19,11 +19,11 @@ static void *trywrlock(void *arg)
 {
 	int r = pthread_rwlock_trywrlock(arg);
 	if (r != EBUSY)
-		t_error("trywrlock for rdlocked lock returned %s, want EBUSY\n", strerror(r));
+		return -1;
 	return 0;
 }
 
-int main(void)
+UK_TESTCASE(uk_libc_pthread_tests, pthread_rwlock_ebusy_tests)
 {
 	pthread_t t;
 	pthread_rwlock_t rw = PTHREAD_RWLOCK_INITIALIZER;
@@ -33,12 +33,12 @@ int main(void)
 	T(pthread_rwlock_rdlock(&rw));
 	T(pthread_create(&t, 0, trywrlock, &rw));
 	T(pthread_join(t, &p));
+	UK_TEST_EXPECT_ZERO(((int)p));
 	T(pthread_rwlock_unlock(&rw));
 
 	T(pthread_rwlock_wrlock(&rw));
 	T(pthread_create(&t, 0, tryrdlock, &rw));
 	T(pthread_join(t, &p));
+	UK_TEST_EXPECT_ZERO(((int)p));
 	T(pthread_rwlock_unlock(&rw));
-
-	return t_status;
 }
-- 
2.25.1

