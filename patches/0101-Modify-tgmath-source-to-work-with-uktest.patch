From 502a11b03145ccac4d772b10cb3840f0a622d717 Mon Sep 17 00:00:00 2001
From: Florin Postolache <florin.postolache80@gmail.com>
Date: Tue, 25 Oct 2022 12:05:57 +0300
Subject: [PATCH] Modify tgmath source to work with uktest

Signed-off-by: Florin Postolache <florin.postolache80@gmail.com>
---
 src/functional/tgmath.c | 42 ++++++++++++++---------------------------
 1 file changed, 14 insertions(+), 28 deletions(-)

diff --git a/src/functional/tgmath.c b/src/functional/tgmath.c
index dcbc640..efc83ac 100644
--- a/src/functional/tgmath.c
+++ b/src/functional/tgmath.c
@@ -1,39 +1,25 @@
 #include <tgmath.h>
-#include "test.h"
+#include <uk/test.h>
 
-int main(void)
+UK_TESTCASE(uk_libc_tgmath_tests, tgmath_tests)
 {
 	long i;
 
 	i = lrint(123456789.1f) & 0x7fffffff;
-	if (i != 123456792)
-		t_error("lrint(123456789.1f)&0x7fffffff want 123456792 got %ld\n", i);
+	UK_TEST_ASSERT(i == 123456792);
 	i = lrint(123456789.1) & 0x7fffffff;
-	if (i != 123456789)
-		t_error("lrint(123456789.1)&0x7fffffff want 123456789 got %ld\n", i);
+	UK_TEST_ASSERT(i == 123456789);
 
-	if (sqrt(2.0f) != 1.41421353816986083984375)
-		t_error("sqrt(2.0f) want 0x1.6a09e6p+0 got %a\n", sqrt(2.0f));
-	if (sqrt(2.0) != 1.414213562373095145474621858738828450441360)
-		t_error("sqrt(2.0) want 0x1.6a09e667f3bcdp+0 got %a\n", sqrt(2.0));
-	if (sqrt(2) != 1.414213562373095145474621858738828450441360)
-		t_error("sqrt(2) want 0x1.6a09e667f3bcdp+0 got %a\n", sqrt(2.0));
+	UK_TEST_ASSERT(sqrt(2.0f) == 1.41421353816986083984375);
+	UK_TEST_ASSERT(sqrt(2.0) == 1.414213562373095145474621858738828450441360);
+	UK_TEST_ASSERT(sqrt(2) == 1.414213562373095145474621858738828450441360);
 
-	if (sizeof pow(sqrt(8),0.5f) != sizeof(double))
-		t_error("sizeof pow(sqrt(8),0.5f) want %d got %d\n", (int)sizeof(double), (int)sizeof pow(sqrt(8),0.5f));
-	if (sizeof pow(2.0,0.5) != sizeof(double))
-		t_error("sizeof pow(2.0,0.5) want %d got %d\n", (int)sizeof(double), (int)sizeof pow(2.0,0.5));
-	if (sizeof pow(2.0f,0.5f) != sizeof(float))
-		t_error("sizeof pow(2.0f,0.5f) want %d got %d\n", (int)sizeof(float), (int)sizeof pow(2.0f,0.5f));
-	if (sizeof pow(2.0,0.5+0*I) != sizeof(double complex))
-		t_error("sizeof pow(2.0,0.5+0*I) want %d got %d\n", (int)sizeof(double complex), (int)sizeof pow(2.0,0.5+0*I));
+	UK_TEST_ASSERT((sizeof pow(sqrt(8),0.5f) == sizeof(double)));
+	UK_TEST_ASSERT((sizeof pow(2.0,0.5) == sizeof(double)));
+	UK_TEST_ASSERT((sizeof pow(2.0f,0.5f) == sizeof(float)));
+	UK_TEST_ASSERT((sizeof pow(2.0,0.5+0*I) == sizeof(double complex)));
 
-	if (pow(2.0,0.5) != 1.414213562373095145474621858738828450441360)
-		t_error("pow(2.0,0.5) want 0x1.6a09e667f3bcdp+0 got %a\n", pow(2.0,0.5));
-	if (pow(2,0.5) != 1.414213562373095145474621858738828450441360)
-		t_error("pow(2,0.5) want 0x1.6a09e667f3bcdp+0 got %a\n", pow(2,0.5));
-	if (pow(2,0.5f) != 1.414213562373095145474621858738828450441360)
-		t_error("pow(2,0.5f) want 0x1.6a09e667f3bcdp+0 got %a\n", pow(2,0.5f));
-
-	return t_status;
+	UK_TEST_ASSERT(pow(2.0,0.5) == 1.414213562373095145474621858738828450441360);
+	UK_TEST_ASSERT(pow(2,0.5) == 1.414213562373095145474621858738828450441360);
+	UK_TEST_ASSERT(pow(2,0.5f) == 1.414213562373095145474621858738828450441360);
 }
-- 
2.25.1

