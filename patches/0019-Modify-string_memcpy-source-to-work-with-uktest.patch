From 328762c4597b6c059b7b0e9049a836a89452b3a5 Mon Sep 17 00:00:00 2001
From: Florin Postolache <florin.postolache80@gmail.com>
Date: Tue, 11 Oct 2022 22:45:42 +0300
Subject: [PATCH] Modify string_memcpy source to work with uktest

---
 src/functional/string_memcpy.c | 19 ++++++++++---------
 1 file changed, 10 insertions(+), 9 deletions(-)

diff --git a/src/functional/string_memcpy.c b/src/functional/string_memcpy.c
index 96256a7..04dd54e 100644
--- a/src/functional/string_memcpy.c
+++ b/src/functional/string_memcpy.c
@@ -1,7 +1,7 @@
 #include <string.h>
 #include <stdlib.h>
 #include <stdint.h>
-#include "test.h"
+#include <uk/test.h>//"test.h"
 
 static char buf[512];
 
@@ -12,7 +12,7 @@ static void *aligned(void *p) {
 }
 
 #define N 80
-static void test_align(int dalign, int salign, int len)
+static int test_align(int dalign, int salign, int len)
 {
 	char *src = aligned(buf);
 	char *dst = aligned(buf + 128);
@@ -30,17 +30,18 @@ static void test_align(int dalign, int salign, int len)
 		src[salign+i] = want[dalign+i] = '0'+i;
 	p = pmemcpy(dst+dalign, src+salign, len);
 	if (p != dst+dalign)
-		t_error("memcpy(%p,...) returned %p\n", dst+dalign, p);
+		return 1;//t_error("memcpy(%p,...) returned %p\n", dst+dalign, p);
 	for (i = 0; i < N; i++)
 		if (dst[i] != want[i]) {
-			t_error("memcpy(align %d, align %d, %d) failed\n", dalign, salign, len);
-			t_printf("got : %.*s\n", dalign+len+1, dst);
-			t_printf("want: %.*s\n", dalign+len+1, want);
+			return 2;//t_error("memcpy(align %d, align %d, %d) failed\n", dalign, salign, len);
+			//t_printf("got : %.*s\n", dalign+len+1, dst);
+			//t_printf("want: %.*s\n", dalign+len+1, want);
 			break;
 		}
+	return 0;
 }
 
-int main(void)
+UK_TESTCASE(uk_libc_testsuite, string_memcpy_tests)//int main(void)
 {
 	int i,j,k;
 
@@ -49,7 +50,7 @@ int main(void)
 	for (i = 0; i < 16; i++)
 		for (j = 0; j < 16; j++)
 			for (k = 0; k < 64; k++)
-				test_align(i,j,k);
+				UK_TEST_EXPECT_ZERO(test_align(i,j,k));
 
-	return t_status;
+	//return t_status;
 }
-- 
2.25.1

